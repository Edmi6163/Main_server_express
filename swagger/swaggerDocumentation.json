{
  "openapi": "3.0.0",
  "info": {
    "title": "Ium Tweb final assignment api docs",
    "description": "OpenApi swagger docs for final assignment",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Main Express server containing the frontend and routes that call the other servers, which communicate with the databases."
    },
    {
      "url": "http://localhost:3001/",
      "description": "Express server connected to MongoDB, which stores data that changes frequently."
    },
    {
      "url": "http://localhost:8082/",
      "description": "Spring Boot server communicating with PostgreSQL, containing data that does not change frequently."
    }
  ],
  "paths": {
    "/insert": {
      "post": {
        "description": "Create a new user",
        "responses": {
          "200": {
            "description": "OK, new user saved in database"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Route to login a user",
        "responses": {
          "200": {
            "description": "OK, user logged in"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "usernameToLog": {
                    "example": "usernameToLogTest"
                  },
                  "passwordToLog": {
                    "example": "passwordToLogTest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/query": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "collection": {
                    "example": "games"
                  },
                  "query": {
                    "example": "away_club_name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queryReceived": {
      "post": {
        "description": "Here the server receive the query from the server that communicate with mongodb",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/askJava": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "table": {
                    "example": "any"
                  },
                  "endpoint": {
                    "example": "any"
                  },
                  "params": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}